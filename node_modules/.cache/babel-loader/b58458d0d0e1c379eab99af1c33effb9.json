{"ast":null,"code":"var _jsxFileName = \"/home/rajivkumar/otp-login/src/App.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Otp extends Component {\n  static get propTypes() {\n    return {\n      options: PropTypes.object\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showfield: false,\n      minutes: this.props.minutes ? this.props.minutes : 0,\n      seconds: this.props.seconds ? this.props.seconds : 30\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    clearInterval(this.myInterval);\n    this.otptimer();\n  }\n\n  otptimer() {\n    clearInterval(this.myInterval);\n    this.myInterval = setInterval(() => {\n      const {\n        seconds,\n        minutes\n      } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({\n            minutes\n          }) => ({\n            minutes: minutes - 1,\n            seconds: 59\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  handleClick(event) {\n    this.setState({\n      minutes: this.props.minutes ? this.props.minutes : 0,\n      seconds: this.props.seconds ? this.props.seconds : 30\n    });\n    this.props.resend();\n    this.otptimer();\n    event.preventDefault();\n  } //   wrapperFunction(e){\n  //     this.props.resend;\n  //     this.handleClick.bind(this);\n  // }\n\n\n  render() {\n    const textStyle = {\n      fontSize: \"16px\",\n      fontFamily: \"Roboto\",\n      lineHeight: \"22px\",\n      color: this.props.textColor ? this.props.textColor : \"#000000\"\n    };\n    const buttonStyling = {\n      border: \"none\",\n      background: this.props.background ? this.props.background : \"#0033cc\",\n      color: this.props.buttonColor ? this.props.buttonColor : \"#fff\",\n      fontSize: \"16px\",\n      lineHeight: \"22px\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: textStyle,\n      children: this.state.minutes === 0 && this.state.seconds === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyling,\n        onClick: this.handleClick,\n        children: this.props.ButtonText ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [this.props.ButtonText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Resend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [this.props.text ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [this.props.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Time left: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), this.state.minutes < 10 ? `0${this.state.minutes}` : this.state.minutes, \":\", this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/rajivkumar/otp-login/src/App.js"],"names":["React","Component","PropTypes","Otp","propTypes","options","object","constructor","props","state","showfield","minutes","seconds","handleClick","bind","componentDidMount","clearInterval","myInterval","otptimer","setInterval","setState","componentWillUnmount","event","resend","preventDefault","render","textStyle","fontSize","fontFamily","lineHeight","color","textColor","buttonStyling","border","background","buttonColor","ButtonText","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Otp extends Component {\n  static get propTypes() {\n    return {\n      options: PropTypes.object,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showfield: false,\n      minutes: this.props.minutes ? this.props.minutes : 0,\n      seconds: this.props.seconds ? this.props.seconds : 30,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    clearInterval(this.myInterval);\n    this.otptimer();\n  }\n\n  otptimer() {\n    clearInterval(this.myInterval);\n    this.myInterval = setInterval(() => {\n      const { seconds, minutes } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({ seconds }) => ({\n          seconds: seconds - 1,\n        }));\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({ minutes }) => ({\n            minutes: minutes - 1,\n            seconds: 59,\n          }));\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  handleClick(event) {\n    this.setState({\n      minutes: this.props.minutes ? this.props.minutes : 0,\n      seconds: this.props.seconds ? this.props.seconds : 30,\n    });\n    this.props.resend();\n    this.otptimer();\n    event.preventDefault();\n  }\n  //   wrapperFunction(e){\n  //     this.props.resend;\n  //     this.handleClick.bind(this);\n  // }\n\n  render() {\n    const textStyle = {\n      fontSize: \"16px\",\n      fontFamily: \"Roboto\",\n      lineHeight: \"22px\",\n      color: this.props.textColor ? this.props.textColor : \"#000000\",\n    };\n\n    const buttonStyling = {\n      border: \"none\",\n      background: this.props.background ? this.props.background : \"#0033cc\",\n      color: this.props.buttonColor ? this.props.buttonColor : \"#fff\",\n      fontSize: \"16px\",\n      lineHeight: \"22px\",\n    };\n\n    return (\n      <div style={textStyle}>\n        {this.state.minutes === 0 && this.state.seconds === 0 ? (\n          <button style={buttonStyling} onClick={this.handleClick}>\n            {this.props.ButtonText ? (\n              <span>{this.props.ButtonText} </span>\n            ) : (\n              <span>Resend</span>\n            )}\n          </button>\n        ) : (\n          <span>\n            {this.props.text ? (\n              <span>{this.props.text} </span>\n            ) : (\n              <span>Time left: </span>\n            )}\n            {this.state.minutes < 10\n              ? `0${this.state.minutes}`\n              : this.state.minutes}\n            :\n            {this.state.seconds < 10\n              ? `0${this.state.seconds}`\n              : this.state.seconds}\n          </span>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}